"use strict";(self.webpackChunkmercury_docs=self.webpackChunkmercury_docs||[]).push([[724],{8043:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>o});var r=t(4848),s=t(8453);const c={sidebar_position:1},i="Tutorial - Rust",a={id:"tutorial-extras/manage-docs-versions",title:"Tutorial - Rust",description:"The rust client acts as a standalone command line client for mercury layer that can demonstrate the main wallet operations. The wallet state is saved in a local sqlite database.",source:"@site/docs/tutorial-extras/manage-docs-versions.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/manage-docs-versions",permalink:"/docs/tutorial-extras/manage-docs-versions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Rust client",permalink:"/docs/category/rust-client"},next:{title:"Atomic swap",permalink:"/docs/tutorial-extras/translate-your-site"}},d={},o=[];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"tutorial---rust",children:"Tutorial - Rust"}),"\n",(0,r.jsxs)(n.p,{children:["The rust client acts as a standalone command line client for mercury layer that can demonstrate the main wallet operations. The wallet state is saved in a local ",(0,r.jsx)(n.code,{children:"sqlite"})," database."]}),"\n",(0,r.jsx)(n.p,{children:"Initially, Rust must be installed. To do this on a Linux or MacOS system, simply run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"curl https://sh.rustup.rs -sSf | sh\n"})}),"\n",(0,r.jsx)(n.p,{children:"To use the standalone client app, first clone the mercurylayer repository:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone https://github.com/commerceblock/mercurylayer.git\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Then switch to the ",(0,r.jsx)(n.code,{children:"dev"})," branch:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd mercurylayer\ngit checkout dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then change directory to the standalone client:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd /clients/apps/rust\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this directory is the ",(0,r.jsx)(n.code,{children:"Settings.toml"})," file for the client. This needs to be edited (using any text editor, e.g. vi or nano) to set the mercury server endpoint and Electrum server URL."]}),"\n",(0,r.jsxs)(n.p,{children:["For the purposes of demonstration, use the following ",(0,r.jsx)(n.code,{children:"Settings.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'statechain_entity = "http://test.mercurylayer.com:8500"\nelectrum_server = "tcp://mutinynet.com:50001"\nelectrum_type = "electrs"\nnetwork = "signet"\nfee_rate_tolerance = 5\ndatabase_file="wallet.db"\nconfirmation_target = 2\nmax_fee_rate = 1\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The test mercury key server URL is: ",(0,r.jsx)(n.code,{children:"http://test.mercurylayer.com:8500"})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Note that this is a test server. It is free to use, but there is no guarantee of persistence or security. Use only for testnet or signet coins."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Once the settings are complete, initialise a wallet using:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run create-wallet <wallet_name>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Running this with name ",(0,r.jsx)(n.code,{children:"test_wallet"})," should return an object like:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'Wallet created: Wallet { name: "test_wallet", mnemonic: "core parade visual doctor region beach approve slim refuse drip rigid develop", version: "0.1.0", state_entity_endpoint: "http://test.mercurylayer.com:8500", electrum_endpoint: "tcp://mutinynet.com:50001", network: "signet", blockheight: 2820795, initlock: 25920, interval: 6, tokens: [], activities: [], coins: [] }\n'})}),"\n",(0,r.jsx)(n.p,{children:"In order to use the mercury layer key server, an access token is required in order to create a shared key. For the test server, tokens can be generated as follows from the command line:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run new-token\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Which will return a ",(0,r.jsx)(n.code,{children:"token_id"})," e.g. ",(0,r.jsx)(n.code,{children:"e7d8c299-7121-48b3-bc78-8c70bf4c9691"})]}),"\n",(0,r.jsx)(n.p,{children:"With a valid token, it is then possible to generate a shared key and address to deposit testnet bitcoin into:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run new-deposit-address <wallet_name> <token> <amount>\n"})}),"\n",(0,r.jsx)(n.p,{children:"For example the following will initialise a coin for an amount of 200000 sats."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run new-deposit-address test_wallet e7d8c299-7121-48b3-bc78-8c70bf4c9691 200000\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command will then generate the shared key with the server and display the address, e.g.:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n  "address": "tb1p0rl49a3ddl44y9y9wsazp29ez3rgp97dqljsdrpqmanklppx4qgscahkex"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Copy the address and pay the specified amount to it. For the mutinynet signet network, this payment can be made directly via the faucet: ",(0,r.jsx)(n.a,{href:"https://faucet.mutinynet.com/",children:"faucet.mutinynet.com"})]}),"\n",(0,r.jsx)(n.p,{children:"Once paid, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run list-statecoins <wallet-name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"To list the coins in the wallet and complete the deposit process."}),"\n",(0,r.jsx)(n.p,{children:"This will return e.g.:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'[\n  {\n    "coin.address": "tml1qqpruc0ty5zl4z25juqaq5d8vrgl6d28tktl7cuh8ygus47vgy0d9kgr2weknc939dy8sdlxy8w8ffwaczvzu844rcs33cwvdgerh2ytdwtsvajeh6",\n    "coin.aggregated_address": "tb1p0rl49a3ddl44y9y9wsazp29ez3rgp97dqljsdrpqmanklppx4qgscahkex",\n    "coin.amount": 100000,\n    "coin.locktime": 1189682,\n    "coin.statechain_id": "99e79535933642758735620e621e8e9b",\n    "coin.status": "UNCONFIRMED",\n    "coin.user_pubkey": "023e61eb2505fa89549701d051a760d1fd35475d97ff63973911c857cc411ed2d9"\n  }\n]\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Once the ",(0,r.jsx)(n.code,{children:"coin.status"})," shows ",(0,r.jsx)(n.code,{children:"CONFIRMED"}),", the coin can be transferred."]}),"\n",(0,r.jsx)(n.p,{children:"To generate a statecoin receieve address, run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run new-transfer-address <wallet_name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Which will generate a mercury layer address to recieve a coin to. e.g.:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n  "new_transfer_address:": "tml1qqp7m5tc9auxgwka84tez9vksky2lsp5uftyhhduakt75j8yq46wh3crh26fwzxw2akc43d9m0pvuhmuq57tcdtw7pz96zfsz8ck3d3jjf3q04re26"\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This address can then be used to send a specified coin (with ",(0,r.jsx)(n.code,{children:"statechain_id"}),") coin to a specified statechain address:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run transfer-send <wallet_name> <statechain-id> <statechain-address>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For example, with the confirmed coin above (",(0,r.jsx)(n.code,{children:'coin.statechain_id: "99e79535933642758735620e621e8e9b"'}),")"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run transfer-send test_wallet tml1qqp7m5tc9auxgwka84tez9vksky2lsp5uftyhhduakt75j8yq46wh3crh26fwzxw2akc43d9m0pvuhmuq57tcdtw7pz96zfsz8ck3d3jjf3q04re26 99e79535933642758735620e621e8e9b\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will return:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n  "Transfer": "sent"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"The recevier then runs the following command to finalise the receipt of the coin and update the key share:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run transfer-receive <wallet_name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"The coin will then appear in the coins list:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run list-statecoins <wallet-name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"To send the coin back to a standard on-chain bitcoin address, simply run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run withdraw <wallet_name> <statechain-id> <btc-address> <optional_fee_rate>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For the demo test coins, these can be sent back to an address generated by the faucet: ",(0,r.jsx)(n.a,{href:"https://faucet.mutinynet.com/",children:"faucet.mutinynet.com"})]}),"\n",(0,r.jsx)(n.p,{children:"In case the coin expires and the mercury server is unavailable, the backup transaction can be used as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cargo run broadcast-backup-transaction <wallet_name> <statechain-id> <btc-address> <optional_fee_rate>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},c=r.createContext(s);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);